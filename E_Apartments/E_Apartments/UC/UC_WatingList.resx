<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnadd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        sQAAALEBxi1JjQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANkSURBVEhLvZVb
        SFNhAMdXPdVD4LQLgkFkFCXboh6KLtBDZdlNd04WkZSZRc6JXSmzKfVQRFiRpPTg5SxToRTdnNoarKlR
        ectlOwZ28bJhl2VF2MX89+2cb+bWOUVE/eHH+c7t9/929u1M8d+j5B6vCuH4CiXH84SnvnGosSuWnv67
        hBr5DCKFDHkKYBy99M8TVswvIpJvQdIAQjjXNnr5nyekuOuSlFRd2oIZxg5hPK3goTUpauO05KjNsxLm
        xoayLDuB3v77EEHdWPH0IieSaxvR22NBa6cJcfEZSNGwSFUzo+hU2jf7ojZvoYpfR2l03Zpd1okr9+24
        3mJF9zML3ntqBEx5ZwLEY9GptR/Tl7ATqUY64fnNk8isPZElHRh0/xD74QwZknI/SaoNM6lKOkSeKTya
        Yhfym6w/FeSczEKu7iBs3AVkr9+No8u340KiHq11V3Fo8bbPvu+FqqRD5H1CAWFqQTvO2+sx2G8SKGsy
        wVRrxLP2UqHsTU8VXj6vJOfMwv4DUx68vdWHqUoiZG0T8Rd/wbzTZsTpL+KdW5z9AUMOvH2iTI4P7ppr
        1CYdZTF/b0rhI2zaYhh9rjmJqchLOySMz+3YD8+TCmm5p6b246v6cKqSDpl59OrE86PyYFJUWjhtBTIF
        5hSqkU8K+dHoNOxXKbmfoszjUgUfvO7qGVQjH72KjZaSBqDR4vopAwa6Kz+/c5uHBvur+ff9NUup4tfR
        aRhWUhpEwrJdeP2ietg3e2eX6ebk8k6l737YV0fAsS4NjrWn4VgfCygCX4p6ddxKIhgJFvqJjs9GxOUm
        YZWdtd+Gub0eTJWwP5xeWdA24oj5RAoARwxB2FrRvGES1YvZH7U1Qq9hNunUTKZexeSmapgSvZopX3CY
        a/Mv4VGKOoVtZEkrvHZGlN6NBwastIBwZ20OVcsn7JprIRGNBMjHsPNGmShr3gM4TwBvW4A2PSljfcff
        Uo18Qoyuy1JiP2kVhWJBLykasAFDbsBjIWXHfMeHgazxVCUdIrkdLB3LijIbyPMXS+5tB17axbFAjINq
        5EMkjmBpMKUWgyhs2Ah0HPEXDKFxnYZq5BPG8XPI3+ReJdeVrzTyTeSV4iJSD8FLeEp4MJ1zVpXXZtoG
        7doe8mleEbkFDWvmU8W/jkLxHQsddAfSsuxAAAAAAElFTkSuQmCC
</value>
  </data>
</root>